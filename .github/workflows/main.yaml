---
name: terrarium - build and test images

on:
  push:
    branches: [master]
    tags: ["v*"] # ⇢ triggers manifest creation
  pull_request:
    branches: [master]
  release:
    types: [released]

env:
  # github.repository renders as <owner>/<repo>
  IMAGE_BASE: ${{ github.repository }}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

################################################################################
# 1 ────────── Build & test AMD64 image ────────────────────────────────────────
################################################################################
jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      next: ${{ steps.next.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/dump-context
      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - id: next
        name: Get next version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -o pipefail
          npm ci
          # Don't fail PRs – semantic-release exits 1 in PR context
          npx semantic-release --dry-run --ci false | tee sr.log || true
          version=$(grep -Eo 'next release version is [^ ]+' sr.log | awk '{print $NF}' || true)
          echo "::notice title=Discovered-version::${version}"
          echo "version=${version}" >> "$GITHUB_OUTPUT"

  ################################################################################
  # Build & test (amd64)
  ################################################################################
  build-amd64:
    name: Build & test (linux/amd64)
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }
    outputs:
      digest: ${{ steps.build.outputs.digest }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/dump-context

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/terrarium
          flavor: latest=auto,suffix=-linux-amd64
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build, push & test (amd64)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./terraform/docker
          file: terraform/docker/Dockerfile.terrarium
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          target: test

  ################################################################################
  # 2 ────────── Build & test ARM64 image ────────────────────────────────────────
  ################################################################################
  build-arm64:
    name: Build & test (linux/arm64)
    runs-on: ubuntu-22.04-arm
    permissions: { contents: read, packages: write }
    outputs:
      digest: ${{ steps.build.outputs.digest }}

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/dump-context

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/terrarium
          flavor: latest=auto,suffix=-linux-arm64
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build, push & test (arm64)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./terraform/docker
          file: terraform/docker/Dockerfile.terrarium
          platforms: linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          labels: ${{ steps.meta.outputs.labels }}
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          target: test

  ################################################################################
  # 3 ────────── Create multi‑arch manifest (v2 action) ──────────────────────────
  ################################################################################
  publish-image-metadata:
    name: Create & push multi-arch manifest
    if: startsWith(github.ref, 'refs/tags/v') # only for release tags
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    permissions: { contents: read, packages: write }

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/dump-context

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate release tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Create and push manifest
        uses: int128/docker-manifest-create-action@v2
        with:
          # Tags that end‑users will pull (e.g. ghcr.io/org/repo:v1.2.3)
          tags: ${{ steps.meta.outputs.tags }}
          # Image digests built in the two previous jobs
          sources: |
            ghcr.io/${{ github.repository }}@${{ needs.build-amd64.outputs.digest }}
            ghcr.io/${{ github.repository }}@${{ needs.build-arm64.outputs.digest }}
